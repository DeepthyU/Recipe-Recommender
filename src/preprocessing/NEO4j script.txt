LOAD CSV WITH HEADERS  FROM "file:///recipes.csv" AS line  
CREATE 
(p:recipe{recipeid:line.recipeid,name:line.name,description:line.description,method:line.method,recipe_url:line.recipe_url})

LOAD CSV WITH HEADERS  FROM "file:///ingredients.csv" AS line  
CREATE 
(p:ingredient{ingredientid:line.ingredientid,recipename:line.name,content:line.ingredients})

MATCH (a:recipe), (b:ingredient)
WHERE a.name=b.recipename 
CREATE (a)-[: HAS_INGREDIENT]->(b) 

CREATE (v:value {name:'calories'}) 
CREATE (v:value {name:'fat'})
CREATE (v:value {name:'saturates'})
CREATE (v:value {name:'carbs'})
CREATE (v:value {name:'sugars'})
CREATE (v:value {name:'fibre'})
CREATE (v:value {name:'protein'})
CREATE (v:value {name:'salt'})

LOAD CSV WITH HEADERS  FROM "file:///values.csv" AS line  
MATCH  (a:recipe),(b:value)
WHERE b.name='calories' and a.name=line.name
CREATE (a)-[:HAS_NUTRITIONAL_VALUE{amount: line.kcal}]->(b)

LOAD CSV WITH HEADERS  FROM "file:///values.csv" AS line  
MATCH  (a:recipe),(b:value)
WHERE b.name='fat' and a.name=line.name
CREATE (a)-[:HAS_NUTRITIONAL_VALUE{amount: line.fat}]->(b)

LOAD CSV WITH HEADERS  FROM "file:///values.csv" AS line  
MATCH  (a:recipe),(b:value)
WHERE b.name='saturates' and a.name=line.name
CREATE (a)-[:HAS_NUTRITIONAL_VALUE{amount: line.saturates}]->(b)

LOAD CSV WITH HEADERS  FROM "file:///values.csv" AS line  
MATCH  (a:recipe),(b:value)
WHERE b.name='carbs' and a.name=line.name
CREATE (a)-[:HAS_NUTRITIONAL_VALUE{amount: line.carbs}]->(b)

LOAD CSV WITH HEADERS  FROM "file:///values.csv" AS line  
MATCH  (a:recipe),(b:value)
WHERE b.name='sugars' and a.name=line.name
CREATE (a)-[:HAS_NUTRITIONAL_VALUE{amount: line.sugars}]->(b)

LOAD CSV WITH HEADERS  FROM "file:///values.csv" AS line  
MATCH  (a:recipe),(b:value)
WHERE b.name='fibre' and a.name=line.name
CREATE (a)-[:HAS_NUTRITIONAL_VALUE{amount: line.fibre}]->(b)

LOAD CSV WITH HEADERS  FROM "file:///values.csv" AS line  
MATCH  (a:recipe),(b:value)
WHERE b.name='protein' and a.name=line.name
CREATE (a)-[:HAS_NUTRITIONAL_VALUE{amount: line.protein}]->(b)



-------------------------------------------------------------
CREATE CONSTRAINT UniqueIngredient ON (n:CanonicalIngredient) ASSERT n.name IS UNIQUE;

MERGE (i:Nutrition {id: nv_1})
  SET i.name = "Protein"
RETURN i;


MERGE (i:Nutrition {id: nv_2})
  SET i.name = "Fat"
RETURN i;


MERGE (i:Nutrition {id: nv_3)
  SET i.name = "Carbohydrates"
RETURN i;

LOAD CSV WITH HEADERS FROM 'file:///nutrition.csv' AS row
WITH toInteger(row.id) AS ingredientId, row.name as name, toFloat(trim(replace(row.protein, "g", ""))) as protein_in_grams, toFloat(trim(replace(row.carbohydrate, "g", ""))) as carbohydrate_in_grams, toFloat(trim(replace(row.total_fat, "g", ""))) as fat_in_grams
MERGE (i:CanonicalIngredient {name: name})-[r:hasNutritionalValue]->(n:Nutrition)
CASE n.name
	WHEN 'Protein' THEN SET r.amount=protein_in_grams/100
	WHEN 'Carbohydrates' THEN SET r.amount=carbohydrate_in_grams/100
	WHEN 'Fat' THEN SET r.amount=fat_in_grams/100
SET i.id = ingredientId
RETURN count(i);
--------------------------------------------------------------
QUERIES:
MATCH (r:Recipe{name:"recipe_name"})-[v:hasNutritionalValue]->(p:Nutrition)
RETURN v.amount,p.name

MATCH (r:RECIPE{name:"recipe_name"})-[a:hasIngredient]->(i:Ingredient)-[<find canonical match>]]->(c:CanonicalIngredient)-[v:hasNutritionalValue]->(p:Nutrition)
RETURN a.quantity,v.amount,p.name



